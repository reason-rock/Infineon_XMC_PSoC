/*
 * Copyright (C) 2015 Infineon Technologies AG. All rights reserved.
 *
 * Infineon Technologies AG (Infineon) is supplying this software for use with
 * Infineon's microcontrollers.
 * This file can be freely distributed within development tools that are
 * supporting such microcontrollers.
 *
 * THIS SOFTWARE IS PROVIDED "AS IS". NO WARRANTIES, WHETHER EXPRESS, IMPLIED
 * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
 * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
 * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
 *
 */

/**
 * @file
 * @date 01 Sept, 2015
 * @version 1.0.0
 *
 * @brief XMC1100 Boot kit Blinky GPIO demo example
 *
 * The blinky example flashes the led of the board with a periodic rate.
 * LED1 is connected to P0.5
 *
 * History <br>
 *
 * Version 1.0.0 Initial <br>
 *
 */

// Source : https://www.infineon.com/cms/de/product/evaluation-boards/kit_xmc11_boot_001/

#include "xmc_gpio.h"
#include "xmc_scu.h"

#define TICKS_PER_SECOND 1000
#define TICKS_WAIT 200

#define LED1 P0_5
#define LED2 P0_6
#define LED3 P1_2
#define LED4 P1_3
#define LED5 P1_4
#define LED6 P1_5


XMC_SCU_CLOCK_CONFIG_t clock_config =
{
  .pclk_src = XMC_SCU_CLOCK_PCLKSRC_DOUBLE_MCLK, /*PCLK = 2*MCLK*/
  .rtc_src = XMC_SCU_CLOCK_RTCCLKSRC_DCO2,
  .fdiv = 0,  /**< Fractional divider */
  .idiv = 4,  /**MCLK = 8MHz */
};

XMC_GPIO_CONFIG_t gpio_output_config =
{
   .mode                = XMC_GPIO_MODE_OUTPUT_PUSH_PULL,
   .output_level        = XMC_GPIO_OUTPUT_LEVEL_HIGH,
};

void SysTick_Handler(void)
{
  static uint32_t ticks = 0;

  ticks++;
  if (ticks == TICKS_WAIT)
  {
    XMC_GPIO_ToggleOutput(LED1);
    XMC_GPIO_ToggleOutput(LED2);
    XMC_GPIO_ToggleOutput(LED3);
    XMC_GPIO_ToggleOutput(LED4);
    XMC_GPIO_ToggleOutput(LED5);
    XMC_GPIO_ToggleOutput(LED6);
    ticks = 0;
  }
}

int main(void)
{

/* Ensure clock frequency is set at 8MHz (MCLK) */
	XMC_SCU_CLOCK_Init(&clock_config);

/* Initialise P0.0 as an output pin */
	XMC_GPIO_Init(LED1, &gpio_output_config);
	XMC_GPIO_Init(LED2, &gpio_output_config);
	XMC_GPIO_Init(LED3, &gpio_output_config);
	XMC_GPIO_Init(LED4, &gpio_output_config);
	XMC_GPIO_Init(LED5, &gpio_output_config);
	XMC_GPIO_Init(LED6, &gpio_output_config);

/* System timer configuration */
	SysTick_Config(SystemCoreClock / TICKS_PER_SECOND);
  while(1U)
  {

  }
}
